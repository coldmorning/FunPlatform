version: '3.8'
services:
  fun-platform-server:
    image: 'fun-platform-server'
    container_name: 'fun-platform-server'
    build: ./
    restart: always
    ports:
      - 8085:8083
    networks:
      - postgres_net
      - redis_net
      - rabbitmq_net
      - elastic_net
      
  swagger-editor:
    container_name: swagger-editor
    image: swaggerapi/swagger-editor
    ports:
      - 80:8080
  fun-platform-redis-node1:
    image: redis:6.2.5-alpine3.14
    container_name: fun-platform-redis-node1
    ports:
      - 6380:6379
    command: redis-server --requirepass password123 --appendonly yes
    restart: unless-stopped
    networks:
      - redis_net
  redis-gui:
    container_name: redis-gui
    hostname: redis-gui
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: label:fun-platform-redis-node1:6379:0:password123
    ports:
      - 8091:8081
    networks:
      - redis_net
  postgresql:
    container_name: postgres13
    image: postgres:13.4-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root

    volumes:
      -  C:\Users\yulia\Desktop\docker\postgres\data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - postgres_net
    restart: unless-stopped 
  
  postgresql_gui:
    container_name:  postgres_gui
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "coldmorning360@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "123456"
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - C:\Users\yulia\Desktop\docker\pgadmin\data:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - postgres_net
    restart: unless-stopped
    
  rabbitmq:
    image: rabbitmq:3.8.22-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - C:\Users\yulia\Desktop\docker\rabbitmq\data/:/var/lib/rabbitmq/
        - C:\Users\yulia\Desktop\docker\rabbitmq\log/rabbitmq
    networks:
        - rabbitmq_net
    environment:
        RABBITMQ_DEFAULT_PASS: admin
        RABBITMQ_DEFAULT_USER: admin
        RABBITMQ_DEFAULT_VHOST: 'my_vhost'
        
        
  fun-platform-elasticsearch-node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name:  es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic_net

  fun-platform-elasticsearch-node2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name:  es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic_net

  fun-platform-elasticsearch-node3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name:  es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic_net

  kib01:
    image: docker.elastic.co/kibana/kibana:7.15.2
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
    networks:
      - elastic_net

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
   
networks:
  postgres_net:
    driver: bridge
  redis_net:
    driver: bridge
  rabbitmq_net:
    driver: bridge
  elastic_net:
    driver: bridge